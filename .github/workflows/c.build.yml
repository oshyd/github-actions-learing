name: c-build

on:
  push:
    branches: [ "dev" ]
    paths: [ "build/**" ]    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_push_image:
    runs-on: RedHat8
    outputs:
      imageName: ${{ steps.meta.outputs.tags }}
    steps:
      - 
        uses: actions/checkout@v3
      - 
        name: make C program
        working-directory: build
        run: gcc -o add add.c
      - 
        name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}   
      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - 
        name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: build
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  tests:
    needs: build_push_image
    runs-on: RedHat8
    steps:
      - 
        name: Run docker
        run: docker run --name hello_testing -d ${{needs.build_push_image.outputs.imageName}}
      - 
        name: Check if container running
        run: |
            if [ "$( docker container inspect -f '{{.State.Status}}' hello_testing )" == "running" ]; then
              echo "Container is running"
            else
              echo "Container is down"
              exit 1
            fi
      - 
        name: Delete container
        if: always()
        run: | 
            docker stop hello_testing && docker rm hello_testing && docker rmi ${{needs.build_push_image.outputs.imageName}}